{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshyadav/Downloads/webD/classroom/MarketIntel/dashboard/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nrequire(\"dotenv\");\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport axios from \"axios\"; // Import axios\nimport \"./index.css\";\nimport Home from \"./components/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(true); // State for loading\n  const [error, setError] = useState(null); // State for errors\n  const [responseData, setResponseData] = useState(null); // State for storing API response data\n\n  useEffect(() => {\n    const fetchStockData = async () => {\n      try {\n        const companies = [\"AAPL\", \"GOOGL\"];\n        const apiKey = process.env.API_KEY;\n        const symbols = companies.join(\",\");\n        const response = await axios.get(`https://api.twelvedata.com/time_series?symbol=${symbols}&interval=1day&apikey=${apiKey}`);\n        const data = response.data;\n        setResponseData(data); // Store the response data in state\n        console.log(data);\n      } catch (err) {\n        setError(\"Error fetching stock data\"); // Handle errors\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n    fetchStockData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          responseData: responseData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"glghTry9Ke5XqfN+ci92+IXAe2c=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","require","BrowserRouter","Route","Routes","axios","Home","jsxDEV","_jsxDEV","App","_s","loading","setLoading","error","setError","responseData","setResponseData","fetchStockData","companies","apiKey","process","env","API_KEY","symbols","join","response","get","data","console","log","err","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/rajeshyadav/Downloads/webD/classroom/MarketIntel/dashboard/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nrequire(\"dotenv\")\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport axios from \"axios\"; // Import axios\nimport \"./index.css\";\nimport Home from \"./components/Home\";\n\nconst App = () => {\n  const [loading, setLoading] = useState(true); // State for loading\n  const [error, setError] = useState(null); // State for errors\n  const [responseData, setResponseData] = useState(null); // State for storing API response data\n\n  useEffect(() => {\n    const fetchStockData = async () => {\n      try {\n        const companies = [\"AAPL\", \"GOOGL\"];\n        const apiKey = process.env.API_KEY;\n        const symbols = companies.join(\",\");\n\n        const response = await axios.get(\n          `https://api.twelvedata.com/time_series?symbol=${symbols}&interval=1day&apikey=${apiKey}`\n        );\n\n        const data = response.data;\n        setResponseData(data); // Store the response data in state\n        console.log(data);\n      } catch (err) {\n        setError(\"Error fetching stock data\"); // Handle errors\n      } finally {\n        setLoading(false); // Set loading to false after fetching\n      }\n    };\n\n    fetchStockData();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>{error}</div>;\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/*\" element={<Home responseData={responseData} />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AACvCC,OAAO,CAAC,QAAQ,CAAC;AACjB,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;QACnC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,OAAO;QAClC,MAAMC,OAAO,GAAGL,SAAS,CAACM,IAAI,CAAC,GAAG,CAAC;QAEnC,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAC9B,iDAAiDH,OAAO,yBAAyBJ,MAAM,EACzF,CAAC;QAED,MAAMQ,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1BX,eAAe,CAACW,IAAI,CAAC,CAAC,CAAC;QACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZhB,QAAQ,CAAC,2BAA2B,CAAC,CAAC,CAAC;MACzC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDK,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIN,OAAO,EAAE,oBAAOH,OAAA;IAAAuB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAItB,KAAK,EAAE,oBAAOL,OAAA;IAAAuB,QAAA,EAAMlB;EAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpC,oBACE3B,OAAA,CAACN,aAAa;IAAA6B,QAAA,eACZvB,OAAA,CAACJ,MAAM;MAAA2B,QAAA,eACLvB,OAAA,CAACL,KAAK;QAACiC,IAAI,EAAC,IAAI;QAACC,OAAO,eAAE7B,OAAA,CAACF,IAAI;UAACS,YAAY,EAAEA;QAAa;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB,CAAC;AAACzB,EAAA,CAvCID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAyCT,MAAM8B,IAAI,GAAGvC,QAAQ,CAACwC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTnC,OAAA,CAACX,KAAK,CAAC+C,UAAU;EAAAb,QAAA,eACfvB,OAAA,CAACC,GAAG;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAAC,IAAAG,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}